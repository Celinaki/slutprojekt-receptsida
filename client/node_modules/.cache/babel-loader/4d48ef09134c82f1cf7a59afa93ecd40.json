{"ast":null,"code":"var _jsxFileName = \"D:\\\\ITHS\\\\FULLSTACK\\\\receptsida\\\\client\\\\src\\\\components\\\\Navbar.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport style from '../cssmodules/NavbarMod.module.css';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Navbar = () => {\n  _s();\n\n  // const [searchInfo, setSearchInfo] = useState()\n  // const [query, setQuery] = useState('');\n  // const [result,setResult] = useState<Item[] | undefined>();\n  // const textChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n  //     console.log(\"Kalla på api query\")\n  //     const searchstring = event.target.value;\n  //     setQuery(searchstring)\n  //     console.log(searchstring)\n  // };\n  // const handleKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {\n  //     if (event.key === 'Enter') {\n  //         setSearchInfo(query)\n  //     }\n  // }\n  const [recipesFound, setRecipesFound] = useState([]);\n  const [recipeSearch, setRecipeSearch] = useState('');\n\n  const searchForRecipes = async query => {\n    try {\n      const result = await fetch(`http://localhost:3000/recipes/?search=${query}`);\n      return (await result.json()).results;\n    } catch {\n      const result = await fetch(`http://localhost:3000/category/?search=${query}`);\n      return (await result.json()).results;\n    }\n  };\n\n  useEffect(() => {\n    (async () => {\n      const query = encodeURIComponent(recipeSearch);\n      const response = await searchForRecipes(query);\n      setRecipesFound(response);\n    })();\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.navwrapper,\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: style.hamburger,\n      children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 47\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 54\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 61\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: '/',\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: style.heading,\n        children: \"Greenylicious\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: event => search(event),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: style.input,\n        placeholder: \"S\\xF6k p\\xE5 ett recept\" // onChange={textChange}\n        // onKeyDown={handleKeyDown}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Navbar, \"bXLI9bdZkk7O7O/jFfhtdiKu6wg=\");\n\n_c = Navbar;\nexport default Navbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"sources":["D:/ITHS/FULLSTACK/receptsida/client/src/components/Navbar.tsx"],"names":["React","useEffect","useState","style","Link","Navbar","recipesFound","setRecipesFound","recipeSearch","setRecipeSearch","searchForRecipes","query","result","fetch","json","results","encodeURIComponent","response","navwrapper","hamburger","heading","event","search","input"],"mappings":";;;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,oCAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;;;AACA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AAEjB;AACA;AAGA;AAIA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACJ,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCL,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACM,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,EAAD,CAAhD;;AACI,QAAMQ,gBAAgB,GAAG,MAAOC,KAAP,IAAuC;AAC5D,QAAG;AACC,YAAMC,MAAM,GAAG,MAAMC,KAAK,CAAE,yCAAwCF,KAAM,EAAhD,CAA1B;AACA,aAAO,CAAC,MAAMC,MAAM,CAACE,IAAP,EAAP,EAAsBC,OAA7B;AACH,KAHD,CAIA,MAAK;AACD,YAAMH,MAAM,GAAG,MAAMC,KAAK,CAAE,0CAAyCF,KAAM,EAAjD,CAA1B;AACA,aAAO,CAAC,MAAMC,MAAM,CAACE,IAAP,EAAP,EAAsBC,OAA7B;AAEH;AACJ,GAVD;;AAaAd,EAAAA,SAAS,CAAC,MAAM;AACZ,KAAC,YAAU;AACP,YAAMU,KAAK,GAAGK,kBAAkB,CAACR,YAAD,CAAhC;AACA,YAAMS,QAAQ,GAAG,MAAMP,gBAAgB,CAACC,KAAD,CAAvC;AACAJ,MAAAA,eAAe,CAACU,QAAD,CAAf;AACH,KAJD;AAKH,GANQ,CAAT;AAOA,sBACI;AAAK,IAAA,SAAS,EAAEd,KAAK,CAACe,UAAtB;AAAA,4BACI;AAAM,MAAA,SAAS,EAAEf,KAAK,CAACgB,SAAvB;AAAA,8BAAkC;AAAA;AAAA;AAAA;AAAA,cAAlC,oBAAyC;AAAA;AAAA;AAAA;AAAA,cAAzC,oBAAgD;AAAA;AAAA;AAAA;AAAA,cAAhD;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,IAAD;AAAM,MAAA,EAAE,EAAE,GAAV;AAAA,mCAAgB;AAAI,QAAA,SAAS,EAAEhB,KAAK,CAACiB,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAMI;AAAM,MAAA,QAAQ,EAAEC,KAAK,IAAIC,MAAM,CAACD,KAAD,CAA/B;AAAA,8BACA;AAAO,QAAA,IAAI,EAAC,MAAZ;AACI,QAAA,SAAS,EAAElB,KAAK,CAACoB,KADrB;AAEI,QAAA,WAAW,EAAC,yBAFhB,CAGI;AACA;;AAJJ;AAAA;AAAA;AAAA;AAAA,cADA,eAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPA;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH,CA9DD;;GAAMlB,M;;KAAAA,M;AA+DN,eAAeA,MAAf","sourcesContent":["import { getSuggestedQuery } from '@testing-library/react';\r\nimport React, { useEffect, useState } from 'react';\r\nimport style from '../cssmodules/NavbarMod.module.css'\r\nimport { Link } from 'react-router-dom'\r\nconst Navbar = () => {\r\n\r\n    // const [searchInfo, setSearchInfo] = useState()\r\n    // const [query, setQuery] = useState('');\r\n\r\n\r\n    // const [result,setResult] = useState<Item[] | undefined>();\r\n   \r\n\r\n\r\n    // const textChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    //     console.log(\"Kalla på api query\")\r\n    //     const searchstring = event.target.value;\r\n    //     setQuery(searchstring)\r\n    //     console.log(searchstring)\r\n    // };\r\n\r\n    // const handleKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {\r\n    //     if (event.key === 'Enter') {\r\n    //         setSearchInfo(query)\r\n    //     }\r\n    // }\r\nconst [recipesFound, setRecipesFound] = useState([]);\r\nconst [recipeSearch, setRecipeSearch] = useState('')\r\n    const searchForRecipes = async (query: string): Promise<any> => {\r\n        try{\r\n            const result = await fetch(`http://localhost:3000/recipes/?search=${query}`)\r\n            return (await result.json()).results;\r\n        }\r\n        catch{\r\n            const result = await fetch(`http://localhost:3000/category/?search=${query}`)\r\n            return (await result.json()).results;\r\n\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        (async ()=>{\r\n            const query = encodeURIComponent(recipeSearch);\r\n            const response = await searchForRecipes(query) \r\n            setRecipesFound(response)\r\n        })();\r\n    });\r\n    return (\r\n        <div className={style.navwrapper}>\r\n            <span className={style.hamburger}><hr /> <hr /> <hr /></span>\r\n            <Link to={'/'}> <h1 className={style.heading} >\r\n                Greenylicious\r\n            </h1>\r\n            </Link>\r\n            <form onSubmit={event => search(event)}>\r\n            <input type=\"text\"\r\n                className={style.input}\r\n                placeholder=\"Sök på ett recept\"\r\n                // onChange={textChange}\r\n                // onKeyDown={handleKeyDown}\r\n            />\r\n            <button>search</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\nexport default Navbar"]},"metadata":{},"sourceType":"module"}