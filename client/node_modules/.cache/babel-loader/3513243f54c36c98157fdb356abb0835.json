{"ast":null,"code":"var _jsxFileName = \"D:\\\\ITHS\\\\FULLSTACK\\\\receptsida\\\\client\\\\src\\\\components\\\\Navbar.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport style from '../cssmodules/NavbarMod.module.css';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Navbar = () => {\n  _s();\n\n  // const [searchInfo, setSearchInfo] = useState()\n  // const [query, setQuery] = useState('');\n  // const [result,setResult] = useState<Item[] | undefined>();\n  // const textChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n  //     console.log(\"Kalla på api query\")\n  //     const searchstring = event.target.value;\n  //     setQuery(searchstring)\n  //     console.log(searchstring)\n  // };\n  // const handleKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {\n  //     if (event.key === 'Enter') {\n  //         setSearchInfo(query)\n  //     }\n  // }\n  const [recipesFound, setRecipesFound] = useState([]);\n  const [recipeSearch, setRecipeSearch] = useState(''); // const searchForRecipes = async (query: string): Promise<any> => {\n  //     try{\n  //         const result = await fetch(`http://localhost:3000/recipes/?search=${query}`)\n  //         return (await result.json()).results;\n  //     }\n  //     catch{\n  //         const result = await fetch(`http://localhost:3000/category/?search=${query}`)\n  //         return (await result.json()).results;\n  //     }\n  // }\n  // const search = (event: FormEvent<HTMLFormElement>) => {\n  //         event.preventDefault();\n  //         const form = event.target as HTMLFormElement;\n  //         const input = form.querySelector('#searchText') as HTMLInputElement;\n  //         setRecipeSearch(input.value)\n  // }\n  // useEffect(() => {\n  //     (async ()=>{\n  //         const query = encodeURIComponent(recipeSearch);\n  //         if(query){\n  //         const response = await searchForRecipes(query) \n  //         setRecipesFound(response)    \n  //         console.log(response)\n  //         }\n  //     })();\n  // }, [recipeSearch] );\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.navwrapper,\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: style.hamburger,\n      children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 47\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 54\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 61\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: '/',\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: style.heading,\n        children: \"Greenylicious\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Navbar, \"5lCjHubZU462FZ4L0UY3ZUvJGM8=\");\n\n_c = Navbar;\nexport default Navbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"sources":["D:/ITHS/FULLSTACK/receptsida/client/src/components/Navbar.tsx"],"names":["React","useState","style","Link","Navbar","recipesFound","setRecipesFound","recipeSearch","setRecipeSearch","navwrapper","hamburger","heading"],"mappings":";;;AACA,OAAOA,KAAP,IAAsCC,QAAtC,QAAsD,OAAtD;AACA,OAAOC,KAAP,MAAkB,oCAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;;;AACA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AAEjB;AACA;AAGA;AAIA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACJ,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCL,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACM,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,EAAD,CAAhD,CAvBqB,CAwBjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AACA,sBACI;AAAK,IAAA,SAAS,EAAEC,KAAK,CAACO,UAAtB;AAAA,4BACI;AAAM,MAAA,SAAS,EAAEP,KAAK,CAACQ,SAAvB;AAAA,8BAAkC;AAAA;AAAA;AAAA;AAAA,cAAlC,oBAAyC;AAAA;AAAA;AAAA;AAAA,cAAzC,oBAAgD;AAAA;AAAA;AAAA;AAAA,cAAhD;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,IAAD;AAAM,MAAA,EAAE,EAAE,GAAV;AAAA,mCAAgB;AAAI,QAAA,SAAS,EAAER,KAAK,CAACS,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH,CAxED;;GAAMP,M;;KAAAA,M;AAyEN,eAAeA,MAAf","sourcesContent":["import { getSuggestedQuery } from '@testing-library/react';\r\nimport React, { FormEvent, useEffect, useState } from 'react';\r\nimport style from '../cssmodules/NavbarMod.module.css'\r\nimport { Link } from 'react-router-dom'\r\nconst Navbar = () => {\r\n\r\n    // const [searchInfo, setSearchInfo] = useState()\r\n    // const [query, setQuery] = useState('');\r\n\r\n\r\n    // const [result,setResult] = useState<Item[] | undefined>();\r\n   \r\n\r\n\r\n    // const textChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    //     console.log(\"Kalla på api query\")\r\n    //     const searchstring = event.target.value;\r\n    //     setQuery(searchstring)\r\n    //     console.log(searchstring)\r\n    // };\r\n\r\n    // const handleKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {\r\n    //     if (event.key === 'Enter') {\r\n    //         setSearchInfo(query)\r\n    //     }\r\n    // }\r\nconst [recipesFound, setRecipesFound] = useState([]);\r\nconst [recipeSearch, setRecipeSearch] = useState('')\r\n    // const searchForRecipes = async (query: string): Promise<any> => {\r\n    //     try{\r\n    //         const result = await fetch(`http://localhost:3000/recipes/?search=${query}`)\r\n    //         return (await result.json()).results;\r\n    //     }\r\n    //     catch{\r\n    //         const result = await fetch(`http://localhost:3000/category/?search=${query}`)\r\n    //         return (await result.json()).results;\r\n\r\n    //     }\r\n    // }\r\n    // const search = (event: FormEvent<HTMLFormElement>) => {\r\n    //         event.preventDefault();\r\n    //         const form = event.target as HTMLFormElement;\r\n    //         const input = form.querySelector('#searchText') as HTMLInputElement;\r\n    //         setRecipeSearch(input.value)\r\n    // }\r\n\r\n    // useEffect(() => {\r\n    //     (async ()=>{\r\n    //         const query = encodeURIComponent(recipeSearch);\r\n    //         if(query){\r\n    //         const response = await searchForRecipes(query) \r\n    //         setRecipesFound(response)    \r\n    //         console.log(response)\r\n    //         }\r\n\r\n    //     })();\r\n    // }, [recipeSearch] );\r\n    return (\r\n        <div className={style.navwrapper}>\r\n            <span className={style.hamburger}><hr /> <hr /> <hr /></span>\r\n            <Link to={'/'}> <h1 className={style.heading} >\r\n                Greenylicious\r\n            </h1>\r\n            </Link>\r\n            {/* <form onSubmit={event => search(event)}>\r\n            <input type=\"text\"\r\n            id=\"searchText\"\r\n                className={style.input}\r\n                placeholder=\"Sök på ett recept\"\r\n                // onChange={textChange}\r\n                // onKeyDown={handleKeyDown}\r\n            />\r\n            <button>search</button>\r\n            </form> */}\r\n        </div>\r\n    )\r\n}\r\nexport default Navbar"]},"metadata":{},"sourceType":"module"}