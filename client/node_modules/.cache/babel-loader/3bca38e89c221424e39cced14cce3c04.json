{"ast":null,"code":"var _jsxFileName = \"D:\\\\ITHS\\\\FULLSTACK\\\\receptsida\\\\client\\\\src\\\\components\\\\Navbar.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport style from '../cssmodules/NavbarMod.module.css';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Navbar = _ref => {\n  _s();\n\n  let {\n    props\n  } = _ref;\n  // const [searchInfo, setSearchInfo] = useState()\n  // const [query, setQuery] = useState('');\n  // const [result,setResult] = useState<Item[] | undefined>();\n  // const textChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n  //     console.log(\"Kalla på api query\")\n  //     const searchstring = event.target.value;\n  //     setQuery(searchstring)\n  //     console.log(searchstring)\n  // };\n  // const handleKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {\n  //     if (event.key === 'Enter') {\n  //         setSearchInfo(query)\n  //     }\n  // }\n  const [linkTo, setLinkTo] = useState([]);\n  const [recipesFound, setRecipesFound] = useState([]);\n  const [recipeSearch, setRecipeSearch] = useState('');\n  const navigate = useNavigate();\n\n  const goToSearch = () => {\n    navigate({\n      pathname: \"/\",\n      search: `${recipeSearch}`\n    });\n  }; // const searchForRecipes = async (query: string): Promise<any> => {\n  //     if(query){\n  //         const result = await fetch(`http://localhost:3000/recipes?search=${query}`)\n  //         console.log(\"testa testa\")\n  //         return (await result.json()).results;\n  //     }\n  // else{\n  //     const result = await fetch(`localhost:3000/category/:categoryTitle/recipes?search={query}`)\n  //     setLinkTo(`http://localhost:3000/recipes/?search=${query}`)\n  //     return (await result.json()).results;\n  // }\n  // }\n\n\n  useEffect(() => {\n    const search = event => {\n      event.preventDefault();\n      const form = event.target;\n      const input = form.querySelector('#searchText');\n      setRecipeSearch(input.value);\n      console.log(\"testa testa\");\n    };\n  }, []);\n  useEffect(() => {\n    (async () => {\n      const query = encodeURIComponent(recipeSearch); // if(query){\n      // const response = await searchForRecipes(query) \n      // setRecipesFound(response)    \n      // console.log(response)\n      // }\n\n      return query;\n    })();\n  }, [recipeSearch]);\n  const [foo, setFoo] = useState('');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.navwrapper,\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: style.hamburger,\n      children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 47\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 54\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 61\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: '/',\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: style.heading,\n        children: \"Greenylicious\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"searchText\",\n        className: style.input,\n        placeholder: \"S\\xF6k p\\xE5 ett recept\",\n        onChange: e => updateState(e.target.value) // onKeyDown={handleKeyDown}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => goToSearch(),\n        children: \"S\\xF6k \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n\n  function updateState(data) {\n    console.log(data, \"det här är datan\");\n    setFoo(data);\n    console.log(foo, \"detta är setfoo\");\n  }\n};\n\n_s(Navbar, \"nMW7madCtZ5GMXodeuBUJx2zfpA=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Navbar;\nexport default Navbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"sources":["D:/ITHS/FULLSTACK/receptsida/client/src/components/Navbar.tsx"],"names":["React","useEffect","useState","style","Link","useNavigate","Navbar","props","linkTo","setLinkTo","recipesFound","setRecipesFound","recipeSearch","setRecipeSearch","navigate","goToSearch","pathname","search","event","preventDefault","form","target","input","querySelector","value","console","log","query","encodeURIComponent","foo","setFoo","navwrapper","hamburger","heading","e","updateState","data"],"mappings":"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","sourcesContent":["import { getSuggestedQuery } from '@testing-library/react';\r\nimport React, { FormEvent, useEffect, useState } from 'react';\r\nimport style from '../cssmodules/NavbarMod.module.css'\r\nimport { Link, Navigate, useNavigate } from 'react-router-dom'\r\nimport { ChangeEvent } from 'react'\r\nconst Navbar = ({props} : any) => {\r\n\r\n    // const [searchInfo, setSearchInfo] = useState()\r\n    // const [query, setQuery] = useState('');\r\n\r\n\r\n    // const [result,setResult] = useState<Item[] | undefined>();\r\n   \r\n\r\n\r\n    // const textChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    //     console.log(\"Kalla på api query\")\r\n    //     const searchstring = event.target.value;\r\n    //     setQuery(searchstring)\r\n    //     console.log(searchstring)\r\n    // };\r\n\r\n    // const handleKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {\r\n    //     if (event.key === 'Enter') {\r\n    //         setSearchInfo(query)\r\n    //     }\r\n    // }\r\nconst [linkTo, setLinkTo] = useState<any>([]);\r\nconst [recipesFound, setRecipesFound] = useState([]);\r\nconst [recipeSearch, setRecipeSearch] = useState('');\r\n\r\nconst navigate = useNavigate()\r\nconst goToSearch = () =>{\r\n    navigate({\r\n        pathname: \"/\",\r\n        search: `${recipeSearch}`\r\n    })\r\n}\r\n\r\n    // const searchForRecipes = async (query: string): Promise<any> => {\r\n    //     if(query){\r\n    //         const result = await fetch(`http://localhost:3000/recipes?search=${query}`)\r\n    //         console.log(\"testa testa\")\r\n    //         return (await result.json()).results;\r\n    //     }\r\n        // else{\r\n        //     const result = await fetch(`localhost:3000/category/:categoryTitle/recipes?search={query}`)\r\n        //     setLinkTo(`http://localhost:3000/recipes/?search=${query}`)\r\n        //     return (await result.json()).results;\r\n\r\n        // }\r\n    // }\r\n    useEffect(()=>{\r\n            const search = (event: FormEvent<HTMLFormElement>) => {\r\n            event.preventDefault();\r\n            const form = event.target as HTMLFormElement;\r\n            const input = form.querySelector('#searchText') as HTMLInputElement;\r\n            setRecipeSearch(input.value)\r\n            console.log(\"testa testa\")\r\n\r\n    }\r\n    },[])\r\n\r\n\r\n    useEffect(() => {\r\n        (async ()=>{\r\n            const query = encodeURIComponent(recipeSearch);\r\n            // if(query){\r\n            // const response = await searchForRecipes(query) \r\n            // setRecipesFound(response)    \r\n            // console.log(response)\r\n            // }\r\n            return query\r\n\r\n        })();\r\n    }, [recipeSearch] );\r\n\r\n    const [foo, setFoo] = useState<any>('')\r\n    return (\r\n        <div className={style.navwrapper}>\r\n            <span className={style.hamburger}><hr /> <hr /> <hr /></span>\r\n            <Link to={'/'}> <h1 className={style.heading} >\r\n                Greenylicious\r\n            </h1>\r\n            </Link>\r\n            <form  >\r\n            <input type=\"text\"\r\n            id=\"searchText\"\r\n                className={style.input}\r\n                placeholder=\"Sök på ett recept\"\r\n                onChange={(e: ChangeEvent<HTMLInputElement>) => updateState(e.target.value)}\r\n                // onKeyDown={handleKeyDown}\r\n            />\r\n            <button onClick={()=> goToSearch()}>Sök </button> \r\n            </form>\r\n        </div>\r\n    );\r\n\r\nfunction updateState(data:any){\r\n    console.log(data, \"det här är datan\")\r\nsetFoo(data)\r\nconsole.log(foo,\"detta är setfoo\")\r\n}\r\n}\r\n\r\nexport default Navbar\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}