{"ast":null,"code":"var _jsxFileName = \"D:\\\\ITHS\\\\FULLSTACK\\\\receptsida\\\\client\\\\src\\\\components\\\\CategoryView.tsx\",\n    _s = $RefreshSig$();\n\nimport style from '../cssmodules/HomeMod.module.css';\nimport Sidebar from './Sidebar';\nimport RecipeComp from './RecipeComp';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport Navbar from './Navbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CategoryView = () => {\n  _s();\n\n  const [recipeList, setRecipeList] = useState([]);\n  const [tempParam, setTempParam] = useState([]); // const fetchData=async() =>{\n  //     let url = 'http://localhost:3000/recipes';\n  //     let response = await fetch(url);\n  //     let data = await response.json(); \n  //     setRecipeList(data)\n  //     console.log(data)\n  //     console.log(data[0]._id)\n  // };\n\n  const [query, setQuery] = useState('');\n\n  const handleQuery = q => {\n    setQuery(q);\n  };\n\n  const {\n    categoryTitle\n  } = useParams();\n  useEffect(() => {\n    console.log(query);\n    console.log(categoryTitle);\n\n    if (query && categoryTitle) {\n      axios.get(`http://localhost:3000/category/${categoryTitle}/recipes?search=${query}`).then(res => {\n        console.log(res);\n        setRecipeList(res.data);\n      }).catch(err => {\n        console.log(err);\n      });\n    } else if (categoryTitle) {\n      axios.get(`http://localhost:3000/category/${categoryTitle}`).then(res => {\n        console.log(res);\n        setRecipeList(res.data);\n      }).catch(err => {\n        console.log(err);\n      });\n    } else axios.get('http://localhost:3000/category').then(res => {\n      console.log(res);\n      setRecipeList(res.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, [categoryTitle, query]);\n  let navigate = useNavigate();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      onUpdateQuery: handleQuery\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.wrapper,\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: style.recipes,\n        children: recipeList.map(recipe => /*#__PURE__*/_jsxDEV(RecipeComp, {\n          recept: recipe\n        }, recipe._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 39\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CategoryView, \"GOzjB+iz/DUTYMWmeRADzp2aTkw=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = CategoryView;\nexport default CategoryView;\n\nvar _c;\n\n$RefreshReg$(_c, \"CategoryView\");","map":{"version":3,"sources":["D:/ITHS/FULLSTACK/receptsida/client/src/components/CategoryView.tsx"],"names":["style","Sidebar","RecipeComp","useEffect","useState","axios","useParams","useNavigate","Navbar","CategoryView","recipeList","setRecipeList","tempParam","setTempParam","query","setQuery","handleQuery","q","categoryTitle","console","log","get","then","res","data","catch","err","navigate","wrapper","recipes","map","recipe","_id"],"mappings":"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","sourcesContent":["import style from '../cssmodules/HomeMod.module.css'\r\nimport Sidebar from './Sidebar'\r\nimport RecipeComp from './RecipeComp'\r\nimport { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport {useParams, Route, BrowserRouter, Routes, useNavigate, useSearchParams} from 'react-router-dom'\r\nimport Navbar from './Navbar'\r\n\r\n\r\nconst CategoryView = () =>{\r\n    const [recipeList,setRecipeList] = useState<any[]>([]);\r\n    const [tempParam, setTempParam] = useState<any[]>([]);\r\n\r\n    // const fetchData=async() =>{\r\n    //     let url = 'http://localhost:3000/recipes';\r\n    //     let response = await fetch(url);\r\n        \r\n    //     let data = await response.json(); \r\n    //     setRecipeList(data)\r\n    //     console.log(data)\r\n    //     console.log(data[0]._id)\r\n    // };\r\n\r\n    const [query, setQuery] = useState('')\r\n\r\n    const handleQuery = (q : string) => {\r\n\r\n         setQuery(q);\r\n      \r\n    }\r\n    const {categoryTitle} = useParams()\r\n    useEffect(() =>{\r\n        console.log(query)\r\n        console.log(categoryTitle)\r\n        if(query && categoryTitle){\r\n            axios.get(`http://localhost:3000/category/${categoryTitle}/recipes?search=${query}`)    \r\n                .then(res => {\r\n                console.log(res)\r\n                setRecipeList(res.data)\r\n            })\r\n            .catch(err=>{\r\n                console.log(err)\r\n            })\r\n\r\n        }\r\n        else if(categoryTitle){\r\n            axios.get(`http://localhost:3000/category/${categoryTitle}`)\r\n            .then(res => {\r\n                console.log(res)\r\n                setRecipeList(res.data)\r\n            })\r\n            .catch(err=>{\r\n                console.log(err)\r\n            })\r\n        }\r\n        else\r\n        axios.get('http://localhost:3000/category')\r\n        .then(res => {\r\n            console.log(res)\r\n            setRecipeList(res.data)\r\n        })\r\n        .catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }, [categoryTitle,query])\r\n\r\nlet navigate = useNavigate();\r\nreturn(\r\n<>\r\n<Navbar onUpdateQuery={handleQuery}/>\r\n    <div className={style.wrapper}>\r\n        <Sidebar></Sidebar>\r\n        <section className={style.recipes}>\r\n            {recipeList.map(recipe => <RecipeComp key={recipe._id} recept={recipe}></RecipeComp> )}\r\n\r\n        </section>\r\n    </div>\r\n</>\r\n)\r\n}\r\n\r\nexport default CategoryView"]},"metadata":{},"sourceType":"module"}