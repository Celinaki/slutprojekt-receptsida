{"ast":null,"code":"var _jsxFileName = \"D:\\\\ITHS\\\\FULLSTACK\\\\receptsida\\\\client\\\\src\\\\components\\\\SingleRecipe.tsx\",\n    _s2 = $RefreshSig$();\n\nimport style from '../cssmodules/SingleRecipeMod.module.css';\nimport Sidebar from './Sidebar';\nimport { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport StarRatings from './ratings';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SingleRecipe = () => {\n  _s2();\n\n  var _s = $RefreshSig$(),\n      _recipe$ingredients,\n      _recipe$instructions;\n\n  const [recipe, setRecipe] = useState({});\n  const {\n    recipeId\n  } = useParams();\n  useEffect(() => {\n    console.log(recipeId);\n    const url = `http://localhost:3000/recipes/${recipeId}`;\n    console.log(url);\n    axios.get(url).then(res => {\n      console.log(res);\n      setRecipe(res.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n  const [voted, setVote] = useState();\n\n  const setClicked = () => {\n    _s();\n\n    const [beTrue, setTrue] = useState();\n  };\n\n  _s(setClicked, \"0TGqTwDef+r7vn8c1BKs7G+M9YA=\");\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.bigwrapper,\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.recipewrap,\n      children: [/*#__PURE__*/_jsxDEV(\"article\", {\n        className: style.card,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: recipe.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: style.imgdescr,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: recipe.imgUrl,\n            alt: \"\",\n            className: style.bigimg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [recipe.description, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: style.instructions,\n          children: [/*#__PURE__*/_jsxDEV(\"section\", {\n            className: style.lists,\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Ingredienser\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: style.nodec,\n              children: [recipe.ingredients && ((_recipe$ingredients = recipe.ingredients) === null || _recipe$ingredients === void 0 ? void 0 : _recipe$ingredients.map(ingredient => /*#__PURE__*/_jsxDEV(\"li\", {\n                className: style.vegan,\n                children: [\"\\uD83C\\uDF31\", ingredient.name.charAt(0).toUpperCase() + ingredient.name.slice(1), \" \", ingredient.amount, \" \", ingredient.unit]\n              }, recipe._id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 25\n              }, this))), \"                        \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n            className: style.lists,\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Instruktioner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n              className: style.ul,\n              children: recipe.instructions && ((_recipe$instructions = recipe.instructions) === null || _recipe$instructions === void 0 ? void 0 : _recipe$instructions.map(step => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: step\n              }, step.index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 25\n              }, this)))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: style.rating,\n        children: voted == false ? /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: setClicked,\n          children: [\" \", recipe.ratings && /*#__PURE__*/_jsxDEV(StarRatings, {\n            edit: true,\n            recipeId: recipe._id,\n            recipeRatings: recipe.ratings\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 79\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 32\n        }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Tack f\\xF6r din r\\xF6st!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 170\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(SingleRecipe, \"GCb52cQGlJvE4R+p5Mb+w3dDy0o=\", false, function () {\n  return [useParams];\n});\n\n_c = SingleRecipe;\nexport default SingleRecipe;\n\nvar _c;\n\n$RefreshReg$(_c, \"SingleRecipe\");","map":{"version":3,"sources":["D:/ITHS/FULLSTACK/receptsida/client/src/components/SingleRecipe.tsx"],"names":["style","Sidebar","useParams","useEffect","useState","axios","StarRatings","SingleRecipe","recipe","setRecipe","recipeId","console","log","url","get","then","res","data","catch","err","voted","setVote","setClicked","beTrue","setTrue","bigwrapper","recipewrap","card","title","imgdescr","imgUrl","bigimg","description","instructions","lists","nodec","ingredients","map","ingredient","vegan","name","charAt","toUpperCase","slice","amount","unit","_id","ul","step","index","rating","ratings"],"mappings":"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","sourcesContent":["import style from '../cssmodules/SingleRecipeMod.module.css'\r\nimport Sidebar from './Sidebar'\r\nimport { useParams } from 'react-router-dom'\r\nimport { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport StarRatings from './ratings'\r\n\r\nconst SingleRecipe = () => {\r\nconst [recipe,setRecipe] = useState<any>({});\r\nconst {recipeId} = useParams()\r\n useEffect(()=>{\r\n    console.log(recipeId)\r\n    const url = `http://localhost:3000/recipes/${recipeId}`\r\n    console.log(url)\r\n   axios.get(url)\r\n   .then(res => {\r\n    console.log(res)\r\n    setRecipe(res.data)\r\n})\r\n.catch(err=>{\r\n    console.log(err)\r\n})\r\n }, []);\r\n const [voted, setVote] = useState()\r\nconst setClicked = () =>{\r\n    \r\n    const [beTrue, setTrue] = useState()\r\n\r\n}\r\n\r\n    return(\r\n    <div className={style.bigwrapper}>\r\n        <Sidebar />\r\n        <div className={style.recipewrap}>\r\n            <article className={style.card}>\r\n                <h1>{recipe.title}</h1>\r\n                <section className={style.imgdescr}>\r\n                    <img src={recipe.imgUrl} alt=\"\" className={style.bigimg} />\r\n                    <h2>{recipe.description} </h2>\r\n                </section>\r\n                <section className={style.instructions}>\r\n                    <section className={style.lists}>\r\n                        <h2>Ingredienser</h2>\r\n                        <ul className={style.nodec}>\r\n                        {recipe.ingredients && recipe.ingredients?.map((ingredient:any) => (\r\n                        <li className={style.vegan} key={recipe._id}>&#x1f331;{ingredient.name.charAt(0).toUpperCase()+ ingredient.name.slice(1)} {ingredient.amount} {ingredient.unit}</li>\r\n                    ))}                        </ul>\r\n                    </section>\r\n                    <section className={style.lists}>\r\n                        <h2>Instruktioner</h2>\r\n                        <ol className={style.ul}>\r\n                    {recipe.instructions && recipe.instructions?.map((step:any) => (\r\n                        <li key={step.index}>{step}</li>\r\n                    ))}\r\n                </ol>\r\n                    </section>\r\n                </section>\r\n            </article>\r\n            <section className={style.rating}>\r\n          \r\n            {/* <span  {setClicked((clicked) => false &&)} > test</span> */}\r\n            {(voted==false) ?  <span onClick={setClicked}> {recipe.ratings && <StarRatings edit={true} recipeId={recipe._id} recipeRatings={recipe.ratings} />}</span> : <h1>Tack för din röst!</h1>}\r\n            </section>\r\n        </div>\r\n\r\n\r\n    </div>\r\n)}\r\nexport default SingleRecipe"]},"metadata":{},"sourceType":"module"}